services:
  # The Nginx reverse proxy is the entry point for all traffic
  nginx:
    image: nginx:stable-alpine
    container_name: bnn-nginx
    restart: unless-stopped
    ports:
      - "80:80" # Maps port 80 on your machine to port 80 in the container
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
    depends_on:
      - users-service
      - srs-service
      - content-service

  # The Users microservice
  users-service:
    build:
      context: . # Use the project root as the build context
      dockerfile: ./services/users/Dockerfile # Point to the self-contained Dockerfile
    restart: unless-stopped
    env_file: [./.env.docker]
    environment:
      - DB_NAME=users_db
    depends_on: [db]

  srs-service:
    build:
      context: .
      dockerfile: ./services/srs/Dockerfile
    restart: unless-stopped
    env_file: [./.env.docker]
    environment:
      - DB_NAME=srs_db
    depends_on: [db]

  content-service:
    build:
      context: .
      dockerfile: ./services/content/Dockerfile
    restart: unless-stopped
    env_file: [./.env.docker]
    environment:
      - DB_NAME=content_db
    depends_on: [db]

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    # The 'env_file' directive also works here, populating
    # POSTGRES_USER, POSTGRES_PASSWORD, etc. from your .env file.
    env_file:
      - ./.env.docker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

volumes:
  postgres_data:
