services:
  # 1. Nginx: The API Gateway
  nginx:
    image: nginx:stable-alpine
    container_name: wo-nginx
    restart: unless-stopped
    ports: ["80:80"]
    volumes: ["./nginx:/etc/nginx/conf.d:ro"]
    depends_on:
      - users-service
      - content-service
      - quiz-service

  # 2. Users Service
  users-service:
    container_name: wo-users-service
    build:
      context: .
      dockerfile: ./services/users/Dockerfile
    restart: unless-stopped
    env_file: [./.env.docker]
    environment:
      - DB_NAME=users_db
    depends_on: [mongodb]

  # 3. Content Service
  content-service:
    container_name: wo-content-service
    build:
      context: .
      dockerfile: ./services/content/Dockerfile
    restart: unless-stopped
    env_file: [./.env.docker]
    environment:
      - DB_NAME=content_db
    depends_on: [mongodb]

  # 4. Quiz Service
  quiz-service:
    container_name: wo-quiz-service
    build:
      context: .
      dockerfile: ./services/quiz/Dockerfile
    restart: unless-stopped
    env_file: [./.env.docker]
    environment:
      - DB_NAME=quiz_db
    depends_on: [mongodb]

  # 5. MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: wo-mongodb
    restart: unless-stopped
    env_file: [./.env.docker] # Injects MONGO_INITDB_ROOT_USERNAME/PASSWORD
    ports: ["27017:27017"]
    volumes: ["mongo_data:/data/db"]

volumes:
  mongo_data:
